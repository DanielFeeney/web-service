package br.edu.ifms.services;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.Invocation;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;

import br.edu.ifms.entity.Pessoa;
import br.edu.ifms.entity.Pessoas;

public class ServiceClient {

	private Client client;
	
	private WebTarget webTarget;
	
	private final String URL_SERVICE = "http://localhost:8080/WebServiceRest/rest/service";

	public ServiceClient() {
		this.client = ClientBuilder.newClient();;
	}
	
	public String CadastrarPessoa(Pessoa pessoa) {
		this.webTarget = this.client.target(URL_SERVICE).path("cadastrar");
		Invocation.Builder invocationBuilder = this.webTarget.request("application/json; charset=UTF-8");
		Response response = invocationBuilder.post(Entity.entity(pessoa, "application/json; charset=UTF-8"));
		return response.readEntity(String.class);
	}
	
	public String AlterarPessoa(Pessoa pessoa) {
		this.webTarget = this.client.target(URL_SERVICE).path("alterar");
		Invocation.Builder invocationBuilder = this.webTarget.request("application/json; charset=UTF-8");
		Response response = invocationBuilder.put(Entity.entity(pessoa, "application/json; charset=UTF-8"));
		return response.readEntity(String.class);
	}
	
	public Pessoas ConsultarTodasPessoas() {
		this.webTarget = this.client.target(URL_SERVICE).path("todasPessoas");
		Invocation.Builder invocationBuilder = this.webTarget.request("application/json; charset=UTF-8");
		Response response = invocationBuilder.get();
		return response.readEntity(Pessoas.class);
	}
	
	public Pessoa ConsultarPessoaPorCodigo(int codigo) {
		this.webTarget = this.client.target(URL_SERVICE).path("getPessoa").path(String.valueOf(codigo));
		Invocation.Builder invocationBuilder = this.webTarget.request("application/json; charset=UTF-8");
		Response response = invocationBuilder.get();
		return response.readEntity(Pessoa.class);
	}
	
	
}
